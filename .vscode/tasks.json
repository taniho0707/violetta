{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Start Docker",
            "type": "shell",
            "command": "docker",
            "args": [
                "run",
                "--name",
                "${workspaceFolderBasename}",
                "--rm",
                "-v",
                "${cwd}/Generate:/work/Generate",
                "-v",
                "${cwd}/Library:/work/Library",
                "-v",
                "${cwd}/Parameter:/work/Parameter",
                "-v",
                "${cwd}/Project:/work/Project",
                "-v",
                "${cwd}/Script:/work/Script",
                "-v",
                "${cwd}/Test:/work/Test",
                "-v",
                "${cwd}/Tool:/work/Tool",
                "-v",
                "${cwd}/Makefile:/work/Makefile",
                "-v",
                "${cwd}/.includes:/work/.includes",
                "-v",
                "${cwd}/.git:/work/.git",
                "-d",
                "-it",
                "taniho0707/stm32env:1.0",
            ],
            "problemMatcher": [],
            "group": {
                "kind": "build",
                "isDefault": true,
            },
        },
        {
            "label": "Stop Docker",
            "type": "shell",
            "command": "docker",
            "args": [
                "stop",
                "${workspaceFolderBasename}",
            ],
            "problemMatcher": [],
            "group": {
                "kind": "build",
                "isDefault": true,
            },
        },
        {
            "label": "Build taniho",
            "type": "shell",
            "command": "cd build;ninja",
            "args": [],
            "problemMatcher": "$gcc",
            "group": {
                "kind": "build",
                "isDefault": true,
            },
        },
        // {
        //     "label": "Build taniho",
        //     "type": "shell",
        //     "command": "docker",
        //     "args": [
        //         "exec",
        //         "-w",
        //         "/work",
        //         "-it",
        //         "${workspaceFolderBasename}",
        //         "sh",
        //         "-c",
        //         "\"make tanihobuild\"",
        //     ],
        //     "problemMatcher": "$gcc",
        //     "group": {
        //         "kind": "build",
        //         "isDefault": true,
        //     },
        // },
        {
            "label": "Build All",
            "type": "shell",
            "command": "docker",
            "args": [
                "exec",
                "-w",
                "/work",
                "-it",
                "${workspaceFolderBasename}",
                "sh",
                "-c",
                "\"make all\"",
            ],
            "problemMatcher": "$gcc",
            "group": {
                "kind": "build",
                "isDefault": true,
            },
        },
        {
            "label": "Clean",
            "type": "shell",
            "command": "docker",
            "args": [
                "exec",
                "-w",
                "/work",
                "-it",
                "${workspaceFolderBasename}",
                "sh",
                "-c",
                "\"make clean\"",
            ],
            "problemMatcher": "$gcc",
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "Start OpenOCD",
            "type": "shell",
            "command": "openocd",
            "problemMatcher": [],
            "args": [
                "-f",
                "interface/stlink.cfg",
                "-f",
                "target/stm32l4x.cfg",
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
        },
        {
            "label": "Copy Includes",
            "type": "shell",
            "command": "docker",
            "args": [
                "exec",
                "-w",
                "/work/gcc-arm-11.2-2022.02-x86_64-arm-none-eabi",
                "${workspaceFolderBasename}",
                "sh",
                "-c",
                "mkdir -p /work/.includes && find . -name \"*.h\" | xargs cp --parents -t /work/.includes",
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": [],
        },
    ],
}